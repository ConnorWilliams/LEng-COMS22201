A statement of which of the language features you have successfully implemented.
I have successfully implemented everything up to and including test5.w.

VA	test1.w	10%
AE	test2.w	10%
RD	test3.w	10%
IF	test4.w	10%
WH	test5.w	10%
TOTAL       50%

An explanation of how to compile and run your compiler.
This is an exact copy of my Makefile:

all:
    	antlr3 Lex.g
        antlr3 Syn.g
        javac TokenConv.java
        java TokenConv Syn.tokens Irt.java
        antlr3 *.java
        antlr3 camle testi.w
        ./assmule -j testi.ass

clean:
      	rm -f *.class
        rm -f *.txt
        rm -f *.tokens
        rm -f *.ass
        rm -f Lex.java
        rm -f Syn.java

A listing of the output produced by the emulator using the command:
   ./assmule test1.ass
        CAMLE - Compiler to Abstract Machine for Language Engineering
        ./assmule -j test1.ass
        ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
        ---test1.ass ASSEMBLY BEGINS
        ---test1.ass ASSEMBLY ENDS
        ---test1.ass EXECUTION BEGINS
        10023
        10023
        76
        76
        ---test1.ass EXECUTION ENDS
        STATISTICS:
            22 instructions generated
            2 registers used
            22 instructions executed
            

   ./assmule test2.ass
        CAMLE - Compiler to Abstract Machine for Language Engineering
        ./assmule -j test2.ass
        ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
        ---test2.ass ASSEMBLY BEGINS
        ---test2.ass ASSEMBLY ENDS
        ---test2.ass EXECUTION BEGINS
        7
        -5
        28
        -91
        70
        ---test2.ass EXECUTION ENDS
        STATISTICS:
            45 instructions generated
            14 registers used
            45 instructions executed


   ./assmule test3.ass
        CAMLE - Compiler to Abstract Machine for Language Engineering
        ./assmule -j test3.ass
        ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
        ---test3.ass ASSEMBLY BEGINS
        ---test3.ass ASSEMBLY ENDS
        ---test3.ass EXECUTION BEGINS
        Enter a number: 23
        Enter a number: -9999
        First is 23; second is -9999
        ---test3.ass EXECUTION ENDS
        STATISTICS:
            15 instructions generated
            2 registers used
            15 instructions executed


   ./assmule test4.ass
        CAMLE - Compiler to Abstract Machine for Language Engineering
        ./assmule -j test4.ass
        ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
        ---test4.ass ASSEMBLY BEGINS
        ---test4.ass ASSEMBLY ENDS
        ---test4.ass EXECUTION BEGINS
        13
        5

        78bce
        ---test4.ass EXECUTION ENDS
        STATISTICS:
            131 instructions generated
            3 registers used
            95 instructions executed

   
   ./assmule test5.ass
        CAMLE - Compiler to Abstract Machine for Language Engineering
        ./assmule -j test5.ass
        ASS/MULE - ASSembler/eMUlator for Language Engineering - v2.7 - Steve Gregory
        ---test5.ass ASSEMBLY BEGINS
        ---test5.ass ASSEMBLY ENDS
        ---test5.ass EXECUTION BEGINS
        1
        WARNING: Disabled backward jump in   10: JMP 1  
        3
        WARNING: Disabled backward jump in   28: JMP 20  
        7
        WARNING: Disabled backward jump in   50: JMP 41  
        b
        WARNING: Disabled backward jump in   77: JMP 70  
        c
        WARNING: Disabled backward jump in   93: JMP 85  
        d
        WARNING: Disabled backward jump in  102: JMP 94  
        WARNING: Disabled backward jump in  103: JMP 78  
        ---test5.ass EXECUTION ENDS
        STATISTICS:
            105 instructions generated
            3 registers used
            80 instructions executed
